{"version":3,"sources":["components/messagesList/MessagesList.js","utils.js","components/submitForm/SubmitForm.js","components/userNameDialog/UserNameDialog.js","components/disconnectionDialog/DisonnectionDialog.js","components/app/App.js","index.js"],"names":["MessagesList","messages","userName","firstUnreadMessageId","listRef","React","createRef","firstUnreadMessageRef","prevDate","Date","scrolledBottom","useRef","useState","interlocutor","setInterlocutor","useEffect","current","scrollTo","scrollHeight","scrollAtBottom","scrollTop","clientHeight","offsetTop","onInterlocutorHandler","e","target","textContent","className","ref","map","message","date","currentDate","getDate","formatDate","time","key","id","from","onClick","hours","getHours","minutes","getMinutes","formatTime","useStyles","makeStyles","theme","createStyles","container","display","alignItems","paddingTop","paddingBottom","justifyContent","boxSizing","width","breakpoints","down","flexDirection","paddingLeft","button","margin","spacing","backgroundColor","input","SubmitForm","onSubmit","classes","updateInterlocutor","formRef","inputRef","onKeyDown","useCallback","keyCode","shiftKey","preventDefault","dispatchEvent","Event","name","Input","disabled","type","multiline","placeholder","rowsMax","autoFocus","Button","variant","color","right","marginTop","position","wordWrap","fontSize","UserNameDialog","updateData","open","setOpen","handleClose","handleOK","document","querySelector","value","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","fullWidth","autoComplete","DialogActions","dialog","marginRight","marginLeft","DisconnectionDialog","updateShowDisconnectionDialog","aria-describedby","DialogContentText","propTypes","PropTypes","func","getFromStorage","def","JSON","parse","localStorage","getItem","err","appendObjectToStorage","storage","obj","state","setItem","stringify","App","setMessages","online","setOnline","showDisconnectionDialog","setShowDisconnectionDialog","setFirstUnreadMessageId","setUserName","refSocket","updateUserName","restoreSession","st","appState","handleUnload","window","addEventListener","removeEventListener","connectToSocket","socket","WebSocket","onopen","onclose","onlineHandler","offlineHandler","close","onmessage","event","newArr","data","sort","a","b","hidden","notify","Notification","permission","notification","tag","setTimeout","bind","onclick","requestPermission","concat","handleSubmit","FormData","get","msg","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8447a2c0.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useRef, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatTime, formatDate } from '../../utils';\r\nimport './messagesList.css';\r\n\r\nconst MessagesList = ({ messages, userName, firstUnreadMessageId }) => {\r\n  const listRef = React.createRef();\r\n  const firstUnreadMessageRef = React.createRef();\r\n  let prevDate = new Date();\r\n  const scrolledBottom = useRef(true);\r\n  const [interlocutor, setInterlocutor] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!firstUnreadMessageId && scrolledBottom) {\r\n      listRef.current.scrollTo(0, listRef.current.scrollHeight);\r\n    }\r\n  }, [firstUnreadMessageId, listRef, messages]);\r\n\r\n  useEffect(() => {\r\n    const scrollAtBottom = listRef.current.scrollHeight - listRef.current.scrollTop === listRef.current.clientHeight;\r\n\r\n    if (!scrollAtBottom) {\r\n      listRef.current.scrollTo(0, listRef.current.scrollHeight - listRef.current.clientHeight);\r\n      scrolledBottom.current = scrollAtBottom;\r\n    }\r\n  }, [listRef]);\r\n\r\n  useEffect(() => {\r\n    if (firstUnreadMessageId && firstUnreadMessageRef.current) {\r\n      listRef.current.scrollTo(0, firstUnreadMessageRef.current.offsetTop - 20);\r\n    }\r\n  },[firstUnreadMessageId, firstUnreadMessageRef, listRef]);\r\n\r\n  const onInterlocutorHandler = (e) => {\r\n    const interlocutor = e.target.textContent;\r\n\r\n    if (interlocutor !== userName) {\r\n      setInterlocutor(interlocutor);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {interlocutor && <span className=\"interlocutor\">{interlocutor},</span>}\r\n\r\n      <ul ref={listRef} className=\"messages-list\">\r\n        {messages.map(message => {\r\n          const date = formatDate(new Date(message.time));\r\n\r\n          if (prevDate !== date) {\r\n            prevDate = date;\r\n\r\n            return (<li key={message.id} className=\"message-date\">{date}</li>);\r\n          }\r\n\r\n          return (\r\n            <Fragment key={message.id}>\r\n              {message.id === firstUnreadMessageId && <li ref={firstUnreadMessageRef} className=\"messages-list__new-message\"> new messages </li>}\r\n\r\n              <li className=\"messages-list__item\">\r\n                <p className=\"message-description\">\r\n                  <span className={`message-author ${(userName === message.from) ? 'message-author--highlighted' : ''}`} onClick={onInterlocutorHandler}>{message.from}</span>\r\n                  <span className=\"message-time\">{formatTime(new Date(message.time))}</span>\r\n                </p>\r\n                <p className=\"message-text\">{message.message}</p>\r\n              </li>\r\n            </Fragment>\r\n          )\r\n        })}\r\n      </ul>\r\n    </>\r\n  )\r\n};\r\n\r\nMessagesList.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.shape({\r\n    from: PropTypes.string,\r\n    message: PropTypes.string,\r\n    id: PropTypes.string,\r\n    time: PropTypes.number,\r\n  })),\r\n  userName: PropTypes.string,\r\n  firstUnreadMessageId: PropTypes.string,\r\n};\r\n\r\nexport default MessagesList;\r\n","export const formatTime = (date) => {\r\n  let hours = date.getHours();\r\n\r\n  if (hours < 10) {\r\n    hours = '0' + hours;\r\n  }\r\n\r\n  let minutes = date.getMinutes();\r\n\r\n  if (minutes < 10) {\r\n    minutes = '0' + minutes;\r\n  }\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  const currentDate = new Date();\r\n\r\n  if (date.getDate() === currentDate.getDate()) {\r\n    return 'today';\r\n  } else if (date.getDate() === currentDate.getDate() - 1) {\r\n    return 'yesterday';\r\n  }\r\n\r\n  return date.getDate();\r\n};\r\n\r\n","import React, {useCallback, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 30,\r\n      justifyContent: 'center',\r\n      boxSizing: 'border-box',\r\n      width: '100%',\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n        paddingLeft: 0,\r\n      },\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: '#472D74',\r\n    },\r\n    input: {\r\n      width: '80%',\r\n      [theme.breakpoints.down('md')]: {\r\n        width: '90%',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst SubmitForm = ({ onSubmit, userName, updateInterlocutor }) => {\r\n  const classes = useStyles();\r\n  const formRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  const onKeyDown = useCallback((e) => {\r\n    if (e.keyCode === 13 && !e.shiftKey) {\r\n      e.preventDefault();\r\n\r\n      formRef.current.dispatchEvent(new Event('submit'))\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <form\r\n      name=\"form\"\r\n      ref={formRef}\r\n      onSubmit={onSubmit}\r\n      className={classes.container}\r\n    >\r\n      <Input\r\n        disabled={!userName}\r\n        type=\"text\"\r\n        ref={inputRef}\r\n        multiline\r\n        name=\"message\"\r\n        placeholder={`${userName ? \"Type your message...\" : \"Login to type your message\"}`}\r\n        rowsMax={4}\r\n        className={classes.input}\r\n        onKeyDown={onKeyDown}\r\n        autoFocus={true}\r\n      />\r\n      <Button\r\n        disabled={!userName}\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        color=\"secondary\"\r\n      >\r\n        Submit\r\n      </Button>\r\n    </form>\r\n    );\r\n};\r\n\r\nSubmitForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  updateInterlocutor: PropTypes.func,\r\n};\r\n\r\nexport default SubmitForm;","import React, {useCallback, useRef} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    button: {\r\n      right: 2,\r\n      marginTop: 2,\r\n      position: 'absolute',\r\n      backgroundColor: '#472D74',\r\n      [theme.breakpoints.down('md')]: {\r\n        wordWrap: 'break-word',\r\n        width: '15%',\r\n        fontSize: 11,\r\n        margin: 0,\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nexport default function UserNameDialog({ updateData, userName }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOK = useCallback(() => {\r\n    updateData(document.querySelector('#name').value);\r\n    setOpen(false);\r\n  }, [updateData]);\r\n\r\n  const onKeyDown = useCallback((e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n\r\n      handleOK();\r\n    }\r\n  }, [handleOK]);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color='secondary' onClick={handleClickOpen} className={classes.button}>\r\n        {`${userName ? 'Change nickname' : 'Enter nickname'}`}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Type your name</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            autoComplete='off'\r\n            ref={inputRef}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOK} color=\"primary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport SubmitForm from '../submitForm/SubmitForm';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    dialog: {\r\n      width: '25%',\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n    },\r\n      [theme.breakpoints.down('md')]: {\r\n        wordWrap: 'break-word',\r\n        width: '15%',\r\n        fontSize: 11,\r\n        margin: 0,\r\n      },\r\n    }),\r\n);\r\n\r\n\r\nexport default function DisconnectionDialog({ updateShowDisconnectionDialog }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    updateShowDisconnectionDialog(false);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        onKeyDown={handleKeyDown}\r\n        className={classes.dialog}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\" />\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Sorry, there are some problems with the connection. Try it later :)\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nSubmitForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import React, {useEffect, useCallback, useState, useRef} from 'react';\r\nimport './app.css';\r\nimport MessagesList from '../messagesList/MessagesList';\r\nimport SubmitForm from '../submitForm/SubmitForm';\r\nimport UserNameDialog from '../userNameDialog/UserNameDialog';\r\nimport DisconnectionDialog from '../disconnectionDialog/DisonnectionDialog';\r\n\r\nconst getFromStorage = (key, def) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key)) || def;\r\n  } catch (err) {\r\n    return def;\r\n  }\r\n};\r\n\r\nconst appendObjectToStorage = (storage, obj) => {\r\n  let state = getFromStorage(storage, {});\r\n\r\n  state = {\r\n    ...state,\r\n    ...obj,\r\n  };\r\n\r\n  localStorage.setItem(storage, JSON.stringify(state));\r\n};\r\n\r\nconst notify = () => {\r\n  if (Notification.permission === \"granted\") {\r\n    const notification = new Notification('У вас новое сообщение', {\r\n      tag: \"message\",\r\n    });\r\n    setTimeout(notification.close.bind(notification), 4000);\r\n    notify.onclick = () => window.open('http://localhost:3000/');\r\n  }\r\n  else if (Notification.permission !== 'denied') {\r\n    Notification.requestPermission();\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [online, setOnline] = useState(false);\r\n  const [showDisconnectionDialog, setShowDisconnectionDialog] = useState(false);\r\n  const [firstUnreadMessageId, setFirstUnreadMessageId] = useState(null);\r\n  const [userName, setUserName] = useState('');\r\n  const refSocket = useRef(null);\r\n  const [interlocutor, setInterlocutor] = useState('');\r\n\r\n  const updateUserName = useCallback(value => setUserName(value), []);\r\n  const updateInterlocutor = useCallback(value => setInterlocutor(value), []);\r\n\r\n  const restoreSession = useCallback((st) => {\r\n    if (st.userName) {\r\n      setUserName(st.userName);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const appState = getFromStorage('appstate', {});\r\n\r\n    restoreSession(appState);\r\n  }, [restoreSession]);\r\n\r\n  const handleUnload = useCallback(() => {\r\n    appendObjectToStorage('appstate', {\r\n      userName\r\n    })\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeunload', handleUnload);\r\n\r\n    return () => window.removeEventListener('beforeunload', handleUnload);\r\n  }, [handleUnload]);\r\n\r\n  useEffect(() => {\r\n    const connectToSocket = () => {\r\n      const socket = new WebSocket('wss://st-chat.shas.tel');\r\n\r\n      socket.onopen = () => {\r\n        setOnline(true);\r\n        setShowDisconnectionDialog(false);\r\n      };\r\n\r\n      socket.onclose = function() {\r\n        setOnline(false);\r\n        setShowDisconnectionDialog(true);\r\n      };\r\n\r\n      return socket;\r\n    };\r\n\r\n    refSocket.current = connectToSocket();\r\n\r\n    const onlineHandler = () => {\r\n      refSocket.current = connectToSocket();\r\n    };\r\n\r\n    const offlineHandler = () => {\r\n      refSocket.current.close();\r\n    };\r\n\r\n    window.addEventListener('offline', offlineHandler);\r\n    window.addEventListener('online', onlineHandler);\r\n\r\n    return () => {\r\n      refSocket.current.close();\r\n      window.removeEventListener('online', onlineHandler);\r\n      window.removeEventListener('offline', offlineHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refSocket.current.onmessage = function (event) {\r\n      const newArr = JSON.parse(event.data);\r\n\r\n      newArr.sort((a, b) => a.time - b.time);\r\n\r\n      if (document.hidden) {\r\n        notify();\r\n\r\n        if (!firstUnreadMessageId) {\r\n          setFirstUnreadMessageId(newArr[0].id);\r\n        }\r\n      }\r\n\r\n      setMessages(state => state.concat(newArr));\r\n    };\r\n  }, [firstUnreadMessageId, refSocket.current]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('visibilitychange', function() {\r\n      if (document.hidden && firstUnreadMessageId) {\r\n        setFirstUnreadMessageId(null);\r\n      }\r\n    });\r\n  }, [firstUnreadMessageId]);\r\n\r\n  const handleSubmit = useCallback(function(e) {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(e.target);\r\n    const message = formData.get('message');\r\n    const msg = {\r\n      from: userName,\r\n      message: message\r\n    };\r\n\r\n    if (online) {\r\n      refSocket.current.send(JSON.stringify(msg));\r\n    } else {\r\n      setShowDisconnectionDialog(true);\r\n    }\r\n\r\n    document.querySelector('textarea').value = '';\r\n  }, [online, userName]);\r\n\r\n  return (\r\n    <>\r\n      {showDisconnectionDialog && <DisconnectionDialog updateShowDisconnectionDialog={(value) => setShowDisconnectionDialog(value)} />}\r\n      <UserNameDialog updateData={updateUserName} userName={userName} />\r\n      <div className=\"wrapper\">\r\n        <MessagesList\r\n          userName={userName}\r\n          messages={messages}\r\n          firstUnreadMessageId={firstUnreadMessageId}\r\n        />\r\n        <SubmitForm userName={userName} onSubmit={handleSubmit} online={online} updateInterlocutor={updateInterlocutor} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}