{"version":3,"sources":["components/messagesList/MessagesList.js","utils.js","components/submitForm/SubmitForm.js","components/userNameDialog/UserNameDialog.js","components/disconnectionDialog/DisonnectionDialog.js","components/app/App.js","index.js"],"names":["MessagesList","messages","userName","firstUnreadMessageId","updateInterlocutor","listRef","React","createRef","firstUnreadMessageRef","prevDate","Date","scrolledBottom","useRef","useEffect","current","scrollTo","scrollHeight","scrollAtBottom","scrollTop","clientHeight","offsetTop","onInterlocutorHandler","e","interlocutor","target","textContent","ref","className","map","message","date","currentDate","getDate","formatDate","time","key","id","from","onClick","hours","getHours","minutes","getMinutes","formatTime","useStyles","makeStyles","theme","createStyles","container","display","alignItems","paddingTop","paddingBottom","justifyContent","boxSizing","width","breakpoints","down","flexDirection","button","margin","spacing","backgroundColor","input","SubmitForm","onSubmit","onClearInterlocutor","classes","formRef","inputRef","onKeyDown","useCallback","keyCode","shiftKey","preventDefault","dispatchEvent","Event","name","Input","disabled","type","multiline","placeholder","rowsMax","autoFocus","Button","variant","color","right","marginTop","position","wordWrap","fontSize","UserNameDialog","updateData","useState","open","setOpen","handleClose","handleOK","document","querySelector","value","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","fullWidth","autoComplete","DialogActions","dialog","marginRight","marginLeft","DisconnectionDialog","updateShowDisconnectionDialog","aria-describedby","DialogContentText","propTypes","PropTypes","func","getFromStorage","def","JSON","parse","localStorage","getItem","err","appendObjectToStorage","storage","obj","state","setItem","stringify","App","setMessages","online","setOnline","showDisconnectionDialog","setShowDisconnectionDialog","setFirstUnreadMessageId","setUserName","refSocket","setInterlocutor","updateUserName","handleClearInterlocutor","restoreSession","st","appState","handleUnload","window","addEventListener","removeEventListener","connectToSocket","WebSocket","onopen","onclose","offlineHandler","reconnect","Function","prototype","close","interval","setInterval","readyState","clearInterval","onmessage","event","newArr","data","sort","a","b","hidden","notify","Notification","permission","notification","tag","setTimeout","bind","onclick","process","requestPermission","concat","handleSubmit","FormData","get","msg","send","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f90659bc.chunk.js","sourcesContent":["import React, {Fragment, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatTime, formatDate } from '../../utils';\r\nimport './messagesList.css';\r\n\r\nconst MessagesList = ({ messages, userName, firstUnreadMessageId, updateInterlocutor }) => {\r\n  const listRef = React.createRef();\r\n  const firstUnreadMessageRef = React.createRef();\r\n  let prevDate = new Date();\r\n  const scrolledBottom = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (!firstUnreadMessageId && scrolledBottom) {\r\n      listRef.current.scrollTo(0, listRef.current.scrollHeight);\r\n    }\r\n  }, [firstUnreadMessageId, listRef, messages]);\r\n\r\n  useEffect(() => {\r\n    const scrollAtBottom = listRef.current.scrollHeight - listRef.current.scrollTop === listRef.current.clientHeight;\r\n\r\n    if (!scrollAtBottom) {\r\n      listRef.current.scrollTo(0, listRef.current.scrollHeight - listRef.current.clientHeight);\r\n      scrolledBottom.current = scrollAtBottom;\r\n    }\r\n  }, [listRef]);\r\n\r\n  useEffect(() => {\r\n    if (firstUnreadMessageId && firstUnreadMessageRef.current) {\r\n      listRef.current.scrollTo(0, firstUnreadMessageRef.current.offsetTop - 20);\r\n    }\r\n  },[firstUnreadMessageId, firstUnreadMessageRef, listRef]);\r\n\r\n  const onInterlocutorHandler = (e) => {\r\n    const interlocutor = e.target.textContent;\r\n\r\n    if (interlocutor !== userName) {\r\n      updateInterlocutor(interlocutor);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul ref={listRef} className=\"messages-list\">\r\n      {messages.map(message => {\r\n        const date = formatDate(new Date(message.time));\r\n\r\n        if (prevDate !== date) {\r\n          prevDate = date;\r\n\r\n          return (<li key={message.id} className=\"message-date\">{date}</li>);\r\n        }\r\n\r\n        return (\r\n          <Fragment key={message.id}>\r\n            {message.id === firstUnreadMessageId && <li ref={firstUnreadMessageRef} className=\"messages-list__new-message\"> new messages </li>}\r\n\r\n            <li className=\"messages-list__item\">\r\n              <p className=\"message-description\">\r\n                <span className={`message-author ${(userName === message.from) ? 'message-author--highlighted' : ''}`} onClick={onInterlocutorHandler}>{message.from}</span>\r\n                <span className=\"message-time\">{formatTime(new Date(message.time))}</span>\r\n              </p>\r\n              <p className=\"message-text\">{message.message}</p>\r\n            </li>\r\n          </Fragment>\r\n        )\r\n      })}\r\n    </ul>\r\n  )\r\n};\r\n\r\nMessagesList.propTypes = {\r\n  messages: PropTypes.arrayOf(PropTypes.shape({\r\n    from: PropTypes.string,\r\n    message: PropTypes.string,\r\n    id: PropTypes.string,\r\n    time: PropTypes.number,\r\n  })),\r\n  userName: PropTypes.string,\r\n  firstUnreadMessageId: PropTypes.string,\r\n  updateInterlocutor: PropTypes.func,\r\n};\r\n\r\nexport default MessagesList;\r\n","export const formatTime = (date) => {\r\n  let hours = date.getHours();\r\n\r\n  if (hours < 10) {\r\n    hours = '0' + hours;\r\n  }\r\n\r\n  let minutes = date.getMinutes();\r\n\r\n  if (minutes < 10) {\r\n    minutes = '0' + minutes;\r\n  }\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const formatDate = (date) => {\r\n  const currentDate = new Date();\r\n\r\n  if (date.getDate() === currentDate.getDate()) {\r\n    return 'today';\r\n  } else if (date.getDate() === currentDate.getDate() - 1) {\r\n    return 'yesterday';\r\n  }\r\n\r\n  return date.getDate();\r\n};\r\n\r\n","import React, {useCallback, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Input from '@material-ui/core/Input';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport './submitForm.css';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      paddingTop: 30,\r\n      paddingBottom: 30,\r\n      justifyContent: 'center',\r\n      boxSizing: 'border-box',\r\n      width: '100%',\r\n      [theme.breakpoints.down('md')]: {\r\n        flexDirection: 'column',\r\n      },\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: '#472D74',\r\n    },\r\n    input: {\r\n      width: '80%',\r\n      [theme.breakpoints.down('md')]: {\r\n        width: '90%',\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nconst SubmitForm = ({ onSubmit, userName, interlocutor, onClearInterlocutor }) => {\r\n  const classes = useStyles();\r\n  const formRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  const onKeyDown = useCallback((e) => {\r\n    if (e.keyCode === 13 && !e.shiftKey) {\r\n      e.preventDefault();\r\n\r\n      formRef.current.dispatchEvent(new Event('submit'))\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"submit-form__wrapper\">\r\n      {interlocutor && <span className=\"interlocutor\" onClick={onClearInterlocutor}>{interlocutor}, </span>}\r\n\r\n      <form\r\n        name=\"form\"\r\n        ref={formRef}\r\n        onSubmit={onSubmit}\r\n        className={classes.container}\r\n      >\r\n        <Input\r\n          disabled={!userName}\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          multiline\r\n          name=\"message\"\r\n          placeholder={`${userName ? \"Type your message...\" : \"Login to type your message\"}`}\r\n          rowsMax={4}\r\n          className={classes.input}\r\n          onKeyDown={onKeyDown}\r\n          autoFocus\r\n        />\r\n        <Button\r\n          disabled={!userName}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          className={classes.button}\r\n          color=\"secondary\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n    );\r\n};\r\n\r\nSubmitForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  interlocutor: PropTypes.string,\r\n  onClearInterlocutor: PropTypes.func,\r\n};\r\n\r\nexport default SubmitForm;","import React, {useCallback, useRef} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    button: {\r\n      right: 2,\r\n      marginTop: 2,\r\n      position: 'absolute',\r\n      backgroundColor: '#472D74',\r\n      [theme.breakpoints.down('md')]: {\r\n        wordWrap: 'break-word',\r\n        width: '15%',\r\n        fontSize: 11,\r\n        margin: 0,\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nexport default function UserNameDialog({ updateData, userName }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOK = useCallback(() => {\r\n    updateData(document.querySelector('#name').value);\r\n    setOpen(false);\r\n  }, [updateData]);\r\n\r\n  const onKeyDown = useCallback((e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n\r\n      handleOK();\r\n    }\r\n  }, [handleOK]);\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" color='secondary' onClick={handleClickOpen} className={classes.button}>\r\n        {`${userName ? 'Change nickname' : 'Enter nickname'}`}\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Type your name</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            autoComplete='off'\r\n            ref={inputRef}\r\n            onKeyDown={onKeyDown}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleOK} color=\"primary\">\r\n            OK\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport SubmitForm from '../submitForm/SubmitForm';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    dialog: {\r\n      width: '25%',\r\n      marginRight: 'auto',\r\n      marginLeft: 'auto',\r\n    },\r\n      [theme.breakpoints.down('md')]: {\r\n        wordWrap: 'break-word',\r\n        width: '15%',\r\n        fontSize: 11,\r\n        margin: 0,\r\n      },\r\n    }),\r\n);\r\n\r\n\r\nexport default function DisconnectionDialog({ updateShowDisconnectionDialog }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    updateShowDisconnectionDialog(false);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        onKeyDown={handleKeyDown}\r\n        className={classes.dialog}\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Sorry, there are some problems with the connection. Try it later :)\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            OK\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nSubmitForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import React, {useEffect, useCallback, useState, useRef} from 'react';\r\nimport './app.css';\r\nimport MessagesList from '../messagesList/MessagesList';\r\nimport SubmitForm from '../submitForm/SubmitForm';\r\nimport UserNameDialog from '../userNameDialog/UserNameDialog';\r\nimport DisconnectionDialog from '../disconnectionDialog/DisonnectionDialog';\r\n\r\nconst getFromStorage = (key, def) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key)) || def;\r\n  } catch (err) {\r\n    return def;\r\n  }\r\n};\r\n\r\nconst appendObjectToStorage = (storage, obj) => {\r\n  let state = getFromStorage(storage, {});\r\n\r\n  state = {\r\n    ...state,\r\n    ...obj,\r\n  };\r\n\r\n  localStorage.setItem(storage, JSON.stringify(state));\r\n};\r\n\r\nconst notify = () => {\r\n  if (Notification.permission === \"granted\") {\r\n    const notification = new Notification('У вас новое сообщение', {\r\n      tag: \"message\",\r\n    });\r\n    setTimeout(notification.close.bind(notification), 4000);\r\n    notify.onclick = () => window.open(process.env.PUBLIC_URL);\r\n  }\r\n  else if (Notification.permission !== 'denied') {\r\n    Notification.requestPermission();\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [online, setOnline] = useState(false);\r\n  const [showDisconnectionDialog, setShowDisconnectionDialog] = useState(false);\r\n  const [firstUnreadMessageId, setFirstUnreadMessageId] = useState(null);\r\n  const [userName, setUserName] = useState('');\r\n  const refSocket = useRef(null);\r\n  const [interlocutor, setInterlocutor] = useState('');\r\n\r\n  const updateUserName = useCallback(value => setUserName(value), []);\r\n  const handleClearInterlocutor = useCallback(() => setInterlocutor(null), []);\r\n\r\n  const restoreSession = useCallback((st) => {\r\n    if (st.userName) {\r\n      setUserName(st.userName);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const appState = getFromStorage('appstate', {});\r\n\r\n    restoreSession(appState);\r\n  }, [restoreSession]);\r\n\r\n  const handleUnload = useCallback(() => {\r\n    appendObjectToStorage('appstate', {\r\n      userName\r\n    })\r\n  }, [userName]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('beforeunload', handleUnload);\r\n\r\n    return () => window.removeEventListener('beforeunload', handleUnload);\r\n  }, [handleUnload]);\r\n\r\n  useEffect(() => {\r\n    const connectToSocket = () => {\r\n      refSocket.current = new WebSocket('wss://wssproxy.herokuapp.com');\r\n\r\n      refSocket.current.onopen = () => {\r\n        setOnline(true);\r\n        setShowDisconnectionDialog(false);\r\n        setMessages([]);\r\n      };\r\n      refSocket.current.onclose = function() {\r\n        setOnline(false);\r\n      };\r\n    };\r\n\r\n    const reconnect = () => {\r\n      refSocket.current.onclose = Function.prototype;\r\n      refSocket.current.close();\r\n\r\n      connectToSocket();\r\n\r\n      const interval = setInterval(() => {\r\n        if (refSocket.current.readyState === 1) {\r\n          clearInterval(interval);\r\n        }\r\n\r\n        if (refSocket.current.readyState === 2 || refSocket.current.readyState === 3) {\r\n          clearInterval(interval);\r\n          reconnect();\r\n        }\r\n      }, 3000);\r\n    };\r\n\r\n    const offlineHandler = () => {\r\n      reconnect();\r\n      setOnline(false);\r\n      setShowDisconnectionDialog(true);\r\n    };\r\n\r\n    connectToSocket();\r\n\r\n    window.addEventListener('offline', offlineHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('offline', offlineHandler);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    refSocket.current.onmessage = function (event) {\r\n      const newArr = JSON.parse(event.data);\r\n\r\n      newArr.sort((a, b) => a.time - b.time);\r\n\r\n      if (document.hidden) {\r\n        notify();\r\n\r\n        if (!firstUnreadMessageId) {\r\n          setFirstUnreadMessageId(newArr[0].id);\r\n        }\r\n      }\r\n\r\n      setMessages(state => state.concat(newArr));\r\n    };\r\n\r\n    return () => {\r\n      refSocket.current.onmessage = null;\r\n    };\r\n  }, [firstUnreadMessageId, refSocket.current]);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('visibilitychange', function() {\r\n      if (document.hidden && firstUnreadMessageId) {\r\n        setFirstUnreadMessageId(null);\r\n      }\r\n    });\r\n  }, [firstUnreadMessageId]);\r\n\r\n  const handleSubmit = useCallback(function(e) {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(e.target);\r\n    const message = formData.get('message');\r\n    const msg = {\r\n      from: userName,\r\n      message: message\r\n    };\r\n\r\n    if (interlocutor) {\r\n      msg.message = interlocutor.concat(', ', msg.message);\r\n    }\r\n\r\n    if (online) {\r\n      refSocket.current.send(JSON.stringify(msg));\r\n    } else {\r\n      setShowDisconnectionDialog(true);\r\n    }\r\n\r\n    document.querySelector('textarea').value = '';\r\n  }, [interlocutor, online, userName]);\r\n\r\n  return (\r\n    <>\r\n      {showDisconnectionDialog && <DisconnectionDialog updateShowDisconnectionDialog={(value) => setShowDisconnectionDialog(value)} />}\r\n      <UserNameDialog updateData={updateUserName} userName={userName} />\r\n      <div className=\"wrapper\">\r\n        <h1 className='wrapper__title'>{`${online ? `${userName}, welcome to the chat!`  : `${userName}! Unfortunately, you are offline!`}`}</h1>\r\n        <MessagesList\r\n          userName={userName}\r\n          messages={messages}\r\n          firstUnreadMessageId={firstUnreadMessageId}\r\n          updateInterlocutor={setInterlocutor}\r\n        />\r\n        <SubmitForm\r\n          interlocutor={interlocutor}\r\n          online={online}\r\n          onClearInterlocutor={handleClearInterlocutor}\r\n          onSubmit={handleSubmit}\r\n          userName={userName}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}